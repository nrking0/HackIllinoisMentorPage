{"version":3,"sources":["utils/useMentors.js","Pages/Mentors/Mentors.jsx","Components/NavButton/NavButton.jsx","Components/Navbar/Navbar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useMentors","useState","mentors","setMentors","getMentors","a","fetch","response","json","data","useEffect","Mentors","className","JSON","stringify","NavButton","props","url","href","window","location","substring","lastIndexOf","children","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAqBeA,EAnBI,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACdC,EADc,KACLC,EADK,KAGfC,EAAU,uCAAG,8BAAAC,EAAA,sEACQC,MACnB,0DAFW,cACTC,EADS,gBAIIA,EAASC,OAJb,OAITA,EAJS,OAMfL,EAAWK,EAAKC,MAND,2CAAH,qDAahB,OAJAC,qBAAU,WACNN,MACD,CAACA,IAEGF,G,OCHIS,EAXC,WAEZ,IAAMT,EAAUF,IAEhB,OACI,qBAAKY,UAAU,eAAf,SACI,4BAAIC,KAAKC,UAAUZ,QCuBhBa,G,YA7BG,SAACC,GAEf,IAAyBC,EAazB,OACI,qBAAKL,UAAU,YAAf,SACA,mBAAGM,KAAM,IAAMF,EAAMC,IAAKL,WAfLK,EAegCD,EAAMC,IAbvDE,OAAOC,SAASF,KAAKG,UACjBF,OAAOC,SAASF,KAAKI,YAAY,KAAO,KACtCL,GAWyD,UAAnE,SACMD,EAAMO,eCKLC,EAvBA,WACX,OACI,qBAAKZ,UAAU,SAAf,SACI,+BACI,oBAAIA,UAAU,QAAd,SACI,+BACI,mBAAGM,KAAK,IAAR,+BAGR,6BACI,cAAC,EAAD,CAAWD,IAAI,UAAf,uBAEJ,6BACI,cAAC,EAAD,CAAWA,IAAI,UAAf,uBAEJ,6BACI,cAAC,EAAD,CAAWA,IAAI,QAAf,2BCJLQ,MAXf,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,UCIOc,EAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MACjB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFxBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.d11cc94d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useMentors = () => {\n    const [mentors, setMentors] = useState([]);\n\n    const getMentors = async () => {\n        const response = await fetch(\n            \"https://api.hackillinois.org/upload/blobstore/mentors/\"\n        );\n        const json = await response.json();\n\n        setMentors(json.data);\n    };\n\n    useEffect(() => {\n        getMentors();\n    }, [getMentors]);\n\n    return mentors;\n};\n\nexport default useMentors;\n","import React from \"react\";\nimport \"./Mentors.css\";\nimport useMentors from \"../../utils/useMentors\";\n\nconst Mentors = () => {\n    \n    const mentors = useMentors();\n    \n    return(\n        <div className=\"mentors-main\">\n            <p>{JSON.stringify(mentors)}</p>\n        </div>\n    );\n};\n\nexport default Mentors;\n","import React from \"react\";\nimport \"./NavButton.css\";\nimport { PropTypes } from \"prop-types\";\n\nconst NavButton = (props) => {\n\n    const isCurrentWindow = (url) => {\n        if (\n            window.location.href.substring(\n                window.location.href.lastIndexOf(\"/\") + 1\n            ) === url\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n\n    return (\n        <div className=\"navbutton\">\n        <a href={\"/\" + props.url} className={isCurrentWindow(props.url) && \"active\"}>\n            { props.children }\n        </a>\n        </div>\n    );\n};\n\nNavButton.propTypes = {\n    children: PropTypes.string,\n    url: PropTypes.string\n};\n\nexport default NavButton;\n","import React from \"react\";\nimport \"./Navbar.css\";\nimport NavButton from \"../NavButton/NavButton.jsx\";\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\">\n            <ul>\n                <li className=\"title\">\n                    <span>\n                        <a href=\"/\">Hack-Illinois</a>\n                    </span>\n                </li>\n                <li>\n                    <NavButton url=\"contact\">Contact</NavButton>\n                </li>\n                <li>\n                    <NavButton url=\"mentors\">Mentors</NavButton>\n                </li>\n                <li>\n                    <NavButton url=\"about\">About</NavButton>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./App.css\";\nimport Mentors from \"./Pages/Mentors/Mentors.jsx\";\nimport Navbar from \"./Components/Navbar/Navbar.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"main\">\n        <Mentors />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}